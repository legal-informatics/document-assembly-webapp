apply plugin: 'java' 
apply plugin: 'war' 
apply plugin: 'com.bmuschko.cargo' 
apply plugin: 'jetty' 
//apply plugin: 'eclipse-wtp'

//sourceCompatibility = '1.6'

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.bmuschko:gradle-cargo-plugin:2.2.3"
  }
}


repositories {
  mavenCentral()
}

dependencies {
  providedCompile 'javax.servlet:servlet-api:2.5'
  
    //compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'
    // compile "javax.ws.rs:jsr311-api:1.1.1"
    compile 'com.thetransactioncompany:cors-filter:2.5'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.sun.jersey:jersey-server:1.13'
    compile 'com.sun.jersey:jersey-core:1.13'
    compile 'com.sun.jersey:jersey-servlet:1.13'
    compile 'com.sun.jersey:jersey-json:1.13'
    compile 'com.sun.jersey:jersey-bundle:1.17.1'
    compile 'log4j:log4j:1.2.16'
    
    compile 'xerces:xercesImpl:2.8.0'
    compile 'org.apache.jena:jena-core:3.1.1'
    compile 'org.tinyjee.jgraphx:jgraphx:3.4.1.3'  // for .png generating
    
    compile 'org.apache.xmlgraphics:fop:2.3'   // HTML -> RTF, PDF
    
    //compile 'net.sf.saxon:Saxon-HE:9.7.0-7'

  //runtime 'javax.servlet:jstl:1.1.2'
  
  //classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.5'
}

war {
    // from '../LegalDocAssemblyExercise-FrontEnd' // adds front-end files
    archiveName 'assemblyExerciseSystem.war'
}

cargo {
    containerId = 'tomcat8x'
    port = 8084

    deployable {
        context = 'ExerciseSystem'
    }
    local {
        homeDir = file('c:/Program Files/Apache Software Foundation/Apache Tomcat 8.0.27')
        outputFile = file('c:/Program Files/Apache Software Foundation/Apache Tomcat 8.0.27/output.log')
    }
}

cargoRunLocal.dependsOn war


httpPort = 8080
stopPort = 9080
stopKey = "stopKey"
